---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    provider: codeready-toolchain
  name: registration-service
  namespace: toolchain-host-operator
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    provider: codeready-toolchain
  name: registration-service
  namespace: toolchain-host-operator
rules:
  - apiGroups:
      - toolchain.dev.openshift.com
    resources:
      - usersignups
    verbs:
      - create
      - get
      - update
      - list
  - apiGroups:
      - toolchain.dev.openshift.com
    resources:
      - masteruserrecords
      - toolchainconfigs
      - toolchainstatuses
    verbs:
      - get
  - apiGroups:
      - toolchain.dev.openshift.com
    resources:
      - bannedusers
      - toolchainclusters
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    provider: codeready-toolchain
  name: registration-service
  namespace: toolchain-host-operator
subjects:
  - kind: ServiceAccount
    name: registration-service
roleRef:
  kind: Role
  name: registration-service
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    provider: codeready-toolchain
  name: registration-service
  namespace: toolchain-host-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: registration-service
  template:
    metadata:
      labels:
        name: registration-service
        run: registration-service
    spec:
      serviceAccountName: registration-service
      containers:
        - name: registration-service
          image: quay.io/matousjobanek/registration-service:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          command:
            - registration-service
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /api/v1/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: WATCH_NAMESPACE
              value: toolchain-host-operator
            - name: KUBECONFIG
              value: /kcp/kubeconfig
          resources:
            requests:
              cpu: "50m"
              memory: "100M"
          volumeMounts:
          - name: kcp-config
            mountPath: /kcp/
            readOnly: true
      volumes:
      - name: kcp-config
        secret:
          secretName: kcp-syncer-config
          optional: false
---
kind: Service
apiVersion: v1
metadata:
  name: rs
  namespace: toolchain-host-operator
  labels:
    provider: codeready-toolchain
    run: registration-service
spec:
  ports:
    - name: "8080"
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    run: registration-service
  type: ClusterIP
  sessionAffinity: null
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  labels:
    provider: codeready-toolchain
    run: registration-service
  name: rs
  namespace: toolchain-host-operator
spec:
  host: ''
  port:
    targetPort: "8080"
  to:
    kind: Service
    name: rs
    weight: 100
  tls:
    termination: edge
  wildcardPolicy: None
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  labels:
#    provider: codeready-toolchain
#    run: registration-service
#  name: rs
#  namespace: toolchain-host-operator
#spec:
#  ingressClassName: nginx
#  rules:
#  - host: reg-service
#    http:
#      paths:
#      - path: /
#        pathType: Prefix
#        backend:
#          service:
#            name: rs
#            port:
#              number: 80
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: bannedusers.toolchain.dev.openshift.com
spec:
  group: toolchain.dev.openshift.com
  names:
    kind: BannedUser
    listKind: BannedUserList
    plural: bannedusers
    singular: banneduser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.email
      name: Email
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BannedUser is used to maintain a list of banned e-mail addresses
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BannedUserSpec defines the desired state of BannedUser
            properties:
              email:
                description: The e-mail address of the account that has been banned
                type: string
            required:
            - email
            type: object
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: usersignups.toolchain.dev.openshift.com
spec:
  group: toolchain.dev.openshift.com
  names:
    kind: UserSignup
    listKind: UserSignupList
    plural: usersignups
    singular: usersignup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.username
      name: Username
      type: string
    - jsonPath: .spec.givenName
      name: First Name
      priority: 1
      type: string
    - jsonPath: .spec.familyName
      name: Last Name
      priority: 1
      type: string
    - jsonPath: .spec.company
      name: Company
      priority: 1
      type: string
    - jsonPath: .spec.targetCluster
      name: TargetCluster
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Complete")].status
      name: Complete
      type: string
    - jsonPath: .status.conditions[?(@.type=="Complete")].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[?(@.type=="Approved")].status
      name: Approved
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Approved")].reason
      name: ApprovedBy
      priority: 1
      type: string
    - jsonPath: .spec.states
      name: States
      priority: 1
      type: string
    - jsonPath: .status.compliantUsername
      name: CompliantUsername
      type: string
    - jsonPath: .metadata.annotations.toolchain\.dev\.openshift\.com/user-email
      name: Email
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UserSignup registers a user in the CodeReady Toolchain
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSignupSpec defines the desired state of UserSignup
            properties:
              company:
                description: The user's company name, obtained from the identity provider.
                type: string
              familyName:
                description: The user's last name, obtained from the identity provider.
                type: string
              givenName:
                description: The user's first name, obtained from the identity provider.
                type: string
              originalSub:
                description: OriginalSub is an optional property temporarily introduced
                  for the purpose of migrating the users to a new IdP provider client,
                  and contains the user's "original-sub" claim
                type: string
              states:
                description: States contains a number of values that reflect the desired
                  state of the UserSignup.
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              targetCluster:
                description: The cluster in which the user is provisioned in If not
                  set then the target cluster will be picked automatically
                type: string
              userid:
                description: The user's user ID, obtained from the identity provider
                  from the 'sub' (subject) claim
                type: string
              username:
                description: The user's username, obtained from the identity provider.
                type: string
            required:
            - userid
            - username
            type: object
          status:
            description: UserSignupStatus defines the observed state of UserSignup
            properties:
              compliantUsername:
                description: CompliantUsername is used to store the transformed, DNS-1123
                  compliant username
                type: string
              conditions:
                description: 'Conditions is an array of current UserSignup conditions
                  Supported condition types: PendingApproval, Provisioning, Complete'
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdatedTime:
                      description: Last time the condition was updated
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: toolchainconfigs.toolchain.dev.openshift.com
spec:
  group: toolchain.dev.openshift.com
  names:
    kind: ToolchainConfig
    listKind: ToolchainConfigList
    plural: toolchainconfigs
    singular: toolchainconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.host.automaticApproval.enabled
      name: AutomaticApproval
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ToolchainConfig keeps all configuration parameters needed for
          host and member operators
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ToolchainConfigSpec contains all configuration for host and
              member operators
            properties:
              host:
                description: Contains all host operator configuration
                properties:
                  automaticApproval:
                    description: Keeps parameters necessary for automatic approval
                    properties:
                      enabled:
                        description: Defines if the automatic approval is enabled
                          or not
                        type: boolean
                      maxNumberOfUsers:
                        description: Defines the maximal number of users to be allowed
                          for automatic approval. When the number is reached, then
                          the automatic approval is stopped.
                        properties:
                          overall:
                            description: It is the maximal number of users provisioned
                              in the system overall - equals to max number of MasterUserRecords
                              in host cluster
                            type: integer
                          specificPerMemberCluster:
                            additionalProperties:
                              type: integer
                            description: Contains a map of maximal number of users
                              provisioned per member cluster mapped by the cluster
                              name - equals to max number of UserAccounts in member
                              cluster
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      resourceCapacityThreshold:
                        description: Contains threshold (in percentage of usage) that
                          defines when the automatic approval should be stopped
                        properties:
                          defaultThreshold:
                            description: It is the default capacity threshold (in
                              percentage of usage) to be used for all member clusters
                              if no special threshold is defined
                            type: integer
                          specificPerMemberCluster:
                            additionalProperties:
                              type: integer
                            description: Contains a map of specific capacity thresholds
                              (in percentage of usage) for particular member clusters
                              mapped by their names
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    type: object
                  deactivation:
                    description: Keeps parameters concerned with user deactivation
                    properties:
                      deactivatingNotificationDays:
                        description: DeactivatingNotificationDays is the number of
                          days after a pre-deactivating notification is sent that
                          actual deactivation occurs.  If this parameter is set to
                          zero, then there will be no delay
                        type: integer
                      deactivationDomainsExcluded:
                        description: 'DeactivationDomainsExcluded is a string of comma-separated
                          domains that should be excluded from automatic user deactivation
                          For example: "@redhat.com,@ibm.com"'
                        type: string
                      userSignupDeactivatedRetentionDays:
                        description: UserSignupDeactivatedRetentionDays is used to
                          configure how many days we should keep deactivated UserSignup
                          resources before deleting them.  This parameter value should
                          reflect an extended period of time sufficient for gathering
                          user metrics before removing the resources from the cluster.
                        type: integer
                      userSignupUnverifiedRetentionDays:
                        description: UserSignupUnverifiedRetentionDays is used to
                          configure how many days we should keep unverified (i.e.
                          the user hasn't completed the user verification process
                          via the registration service) UserSignup resources before
                          deleting them.  It is intended for this parameter to define
                          an aggressive cleanup schedule for unverified user signups,
                          and the default configuration value for this parameter reflects
                          this.
                        type: integer
                    type: object
                  environment:
                    description: Environment specifies the host-operator environment
                      such as prod, stage, unit-tests, e2e-tests, dev, etc
                    type: string
                  metrics:
                    description: Keeps parameters concerned with metrics
                    properties:
                      forceSynchronization:
                        description: ForceSynchronization is a flag used to trigger
                          synchronization of the metrics based on the resources rather
                          than on the content of `ToolchainStatus.status.metrics`
                        type: boolean
                    type: object
                  notifications:
                    description: Keeps parameters concerned with notifications
                    properties:
                      adminEmail:
                        description: The administrator email address for system notifications
                        type: string
                      durationBeforeNotificationDeletion:
                        description: DurationBeforeNotificationDeletion is notification
                          delivery service to use for notifications
                        type: string
                      notificationDeliveryService:
                        description: NotificationDeliveryService is notification delivery
                          service to use for notifications
                        type: string
                      secret:
                        description: Defines all secrets related to notification configuration
                        properties:
                          mailgunAPIKey:
                            description: The key for the host operator mailgun api
                              key used for creating an instance of mailgun
                            type: string
                          mailgunDomain:
                            description: The key for the host operator mailgun domain
                              used for creating an instance of mailgun
                            type: string
                          mailgunReplyToEmail:
                            description: The key for the reply-to email address that
                              will be set in sent notifications
                            type: string
                          mailgunSenderEmail:
                            description: The key for the host operator mailgun senders
                              email
                            type: string
                          ref:
                            description: Reference is the name of the secret resource
                              to look up
                            type: string
                        type: object
                    type: object
                  registrationService:
                    description: Keeps parameters necessary for the registration service
                    properties:
                      analytics:
                        description: Keeps parameters necessary for the registration
                          service analytics config
                        properties:
                          segmentWriteKey:
                            description: SegmentWriteKey specifies the segment write
                              key
                            type: string
                          woopraDomain:
                            description: WoopraDomain specifies the woopra domain
                              name
                            type: string
                        type: object
                      auth:
                        description: Keeps parameters necessary for the registration
                          service authentication config
                        properties:
                          authClientConfigContentType:
                            description: AuthClientConfigContentType specifies the
                              auth config config content type
                            type: string
                          authClientConfigRaw:
                            description: AuthClientConfigRaw specifies the URL used
                              to a access the registration service
                            type: string
                          authClientLibraryURL:
                            description: AuthClientLibraryURL specifies the auth library
                              location
                            type: string
                          authClientPublicKeysURL:
                            description: AuthClientPublicKeysURL specifies the public
                              keys URL
                            type: string
                        type: object
                      environment:
                        description: Environment specifies the environment such as
                          prod, stage, unit-tests, e2e-tests, dev, etc
                        type: string
                      logLevel:
                        description: LogLevel specifies the logging level
                        type: string
                      namespace:
                        description: Namespace specifies the namespace in which the
                          registration service and host operator is running Consumed
                          by host operator and set as env var on registration-service
                          deployment
                        type: string
                      registrationServiceURL:
                        description: RegistrationServiceURL is the URL used to a ccess
                          the registration service
                        type: string
                      replicas:
                        description: Replicas specifies the number of replicas to
                          use for the registration service deployment
                        format: int32
                        type: integer
                      verification:
                        description: Keeps parameters necessary for the registration
                          service verification config
                        properties:
                          attemptsAllowed:
                            description: VerificationAttemptsAllowed specifies the
                              number of times a user may attempt to correctly enter
                              a verification code, if they fail then they must request
                              another code
                            type: integer
                          codeExpiresInMin:
                            description: VerificationCodeExpiresInMin specifies an
                              int representing the number of minutes before a verification
                              code should be expired
                            type: integer
                          dailyLimit:
                            description: VerificationDailyLimit specifies the number
                              of times a user may initiate a phone verification request
                              within a 24 hour period
                            type: integer
                          enabled:
                            description: VerificationEnabled specifies whether the
                              phone verification feature is enabled or not
                            type: boolean
                          excludedEmailDomains:
                            description: VerificationExcludedEmailDomains specifies
                              the list of email address domains for which phone verification
                              is not required
                            type: string
                          messageTemplate:
                            description: VerificationMessageTemplate specifies the
                              message template used to generate the content sent to
                              users via SMS for phone verification
                            type: string
                          secret:
                            description: Defines all secrets related to the registration
                              service verification configuration
                            properties:
                              ref:
                                description: Reference is the name of the secret resource
                                  to look up
                                type: string
                              twilioAccountSID:
                                description: TwilioAccountSID specifies the Twilio
                                  account identifier, used for sending phone verification
                                  messages
                                type: string
                              twilioAuthToken:
                                description: TwilioAuthToken specifies the Twilio
                                  authentication token, used for sending phone verification
                                  messages
                                type: string
                              twilioFromNumber:
                                description: TwilioFromNumber specifies the phone
                                  number or alphanumeric "Sender ID" for sending phone
                                  verification messages
                                type: string
                            type: object
                        type: object
                    type: object
                  tiers:
                    description: Keeps parameters concerned with tiers
                    properties:
                      defaultSpaceTier:
                        description: DefaultSpaceTier specifies the default tier to
                          assign for new spaces
                        type: string
                      defaultTier:
                        description: DefaultTier specifies the default tier to assign
                          for new users
                        type: string
                      defaultUserTier:
                        description: DefaultUserTier specifies the default tier to
                          assign for new users
                        type: string
                      durationBeforeChangeTierRequestDeletion:
                        description: DurationBeforeChangeTierRequestDeletion specifies
                          the duration before a ChangeTierRequest resource is deleted
                        type: string
                      templateUpdateRequestMaxPoolSize:
                        description: TemplateUpdateRequestMaxPoolSize specifies the
                          maximum number of concurrent TemplateUpdateRequests when
                          updating MasterUserRecords
                        type: integer
                    type: object
                  toolchainStatus:
                    description: Keeps parameters concerned with the toolchainstatus
                    properties:
                      toolchainStatusRefreshTime:
                        description: ToolchainStatusRefreshTime specifies how often
                          the ToolchainStatus should load and refresh the current
                          hosted-toolchain status
                        type: string
                    type: object
                  users:
                    description: Keeps parameters concerned with user management
                    properties:
                      forbiddenUsernamePrefixes:
                        description: ForbiddenUsernamePrefixes is a comma-separated
                          string that defines the prefixes that a username may not
                          have when signing up. If a username has a forbidden prefix,
                          then the username compliance prefix is added to the username
                        type: string
                      forbiddenUsernameSuffixes:
                        description: ForbiddenUsernameSuffixes is a comma-separated
                          string that defines the suffixes that a username may not
                          have when signing up.  If a username has a forbidden suffix,
                          then the username compliance suffix is added to the username
                        type: string
                      masterUserRecordUpdateFailureThreshold:
                        description: MasterUserRecordUpdateFailureThreshold specifies
                          the number of allowed failures before stopping attempts
                          to update a MasterUserRecord
                        type: integer
                    type: object
                type: object
              members:
                description: Contains all member operator configurations for all member
                  clusters
                properties:
                  default:
                    description: Defines default configuration to be applied to all
                      member clusters
                    properties:
                      auth:
                        description: Keeps parameters concerned with authentication
                        properties:
                          idp:
                            description: Represents the configured identity provider
                            type: string
                        type: object
                      autoscaler:
                        description: Keeps parameters concerned with the autoscaler
                        properties:
                          bufferMemory:
                            description: Represents how much memory should be required
                              by the autoscaler buffer
                            type: string
                          bufferReplicas:
                            description: Represents the number of autoscaler buffer
                              replicas to request
                            type: integer
                          deploy:
                            description: Defines the flag that determines whether
                              to deploy the autoscaler buffer
                            type: boolean
                        type: object
                      che:
                        description: Keeps parameters concerned with Che/CRW
                        properties:
                          keycloakRouteName:
                            description: Defines the Che/CRW Keycloak route name
                            type: string
                          namespace:
                            description: Defines the Che/CRW operator namespace
                            type: string
                          required:
                            description: Defines a flag that indicates whether the
                              Che/CRW operator is required to be installed on the
                              cluster. May be used in monitoring.
                            type: boolean
                          routeName:
                            description: Defines the Che/CRW route name
                            type: string
                          secret:
                            description: Defines all secrets related to Che configuration
                            properties:
                              cheAdminPasswordKey:
                                description: The key for the Che admin password in
                                  the secret values map
                                type: string
                              cheAdminUsernameKey:
                                description: The key for the Che admin username in
                                  the secret values map
                                type: string
                              ref:
                                description: Reference is the name of the secret resource
                                  to look up
                                type: string
                            type: object
                          userDeletionEnabled:
                            description: Defines a flag to turn the Che user deletion
                              logic on/off
                            type: boolean
                        type: object
                      console:
                        description: Keeps parameters concerned with the console
                        properties:
                          namespace:
                            description: Defines the console route namespace
                            type: string
                          routeName:
                            description: Defines the console route name
                            type: string
                        type: object
                      memberStatus:
                        description: Keeps parameters concerned with member status
                        properties:
                          refreshPeriod:
                            description: Defines the period between refreshes of the
                              member status
                            type: string
                        type: object
                      toolchainCluster:
                        description: Keeps parameters concerned with the toolchaincluster
                        properties:
                          healthCheckPeriod:
                            description: Defines the period in between health checks
                            type: string
                          healthCheckTimeout:
                            description: Defines the timeout for each health check
                            type: string
                        type: object
                      webhook:
                        description: Keeps parameters concerned with the webhook
                        properties:
                          deploy:
                            description: Defines the flag that determines whether
                              to deploy the Webhook
                            type: boolean
                        type: object
                    type: object
                  specificPerMemberCluster:
                    additionalProperties:
                      description: MemberOperatorConfigSpec contains all configuration
                        parameters of the member operator
                      properties:
                        auth:
                          description: Keeps parameters concerned with authentication
                          properties:
                            idp:
                              description: Represents the configured identity provider
                              type: string
                          type: object
                        autoscaler:
                          description: Keeps parameters concerned with the autoscaler
                          properties:
                            bufferMemory:
                              description: Represents how much memory should be required
                                by the autoscaler buffer
                              type: string
                            bufferReplicas:
                              description: Represents the number of autoscaler buffer
                                replicas to request
                              type: integer
                            deploy:
                              description: Defines the flag that determines whether
                                to deploy the autoscaler buffer
                              type: boolean
                          type: object
                        che:
                          description: Keeps parameters concerned with Che/CRW
                          properties:
                            keycloakRouteName:
                              description: Defines the Che/CRW Keycloak route name
                              type: string
                            namespace:
                              description: Defines the Che/CRW operator namespace
                              type: string
                            required:
                              description: Defines a flag that indicates whether the
                                Che/CRW operator is required to be installed on the
                                cluster. May be used in monitoring.
                              type: boolean
                            routeName:
                              description: Defines the Che/CRW route name
                              type: string
                            secret:
                              description: Defines all secrets related to Che configuration
                              properties:
                                cheAdminPasswordKey:
                                  description: The key for the Che admin password
                                    in the secret values map
                                  type: string
                                cheAdminUsernameKey:
                                  description: The key for the Che admin username
                                    in the secret values map
                                  type: string
                                ref:
                                  description: Reference is the name of the secret
                                    resource to look up
                                  type: string
                              type: object
                            userDeletionEnabled:
                              description: Defines a flag to turn the Che user deletion
                                logic on/off
                              type: boolean
                          type: object
                        console:
                          description: Keeps parameters concerned with the console
                          properties:
                            namespace:
                              description: Defines the console route namespace
                              type: string
                            routeName:
                              description: Defines the console route name
                              type: string
                          type: object
                        memberStatus:
                          description: Keeps parameters concerned with member status
                          properties:
                            refreshPeriod:
                              description: Defines the period between refreshes of
                                the member status
                              type: string
                          type: object
                        toolchainCluster:
                          description: Keeps parameters concerned with the toolchaincluster
                          properties:
                            healthCheckPeriod:
                              description: Defines the period in between health checks
                              type: string
                            healthCheckTimeout:
                              description: Defines the timeout for each health check
                              type: string
                          type: object
                        webhook:
                          description: Keeps parameters concerned with the webhook
                          properties:
                            deploy:
                              description: Defines the flag that determines whether
                                to deploy the Webhook
                              type: boolean
                          type: object
                      type: object
                    description: A map of cluster-specific member operator configurations
                      indexed by member toolchaincluster name
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
            type: object
          status:
            description: ToolchainConfigStatus defines the observed state of ToolchainConfig
            properties:
              conditions:
                description: 'Conditions is an array of the current ToolchainConfig
                  conditions Supported condition types: ConditionReady'
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdatedTime:
                      description: Last time the condition was updated
                      format: date-time
                      type: string
                    message:
                      description: Human readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              syncErrors:
                additionalProperties:
                  type: string
                description: SyncErrors is a map of sync errors indexed by toolchaincluster
                  name that indicates whether an attempt to sync configuration to
                  a member cluster failed
                type: object
                x-kubernetes-map-type: atomic
            type: object
        type: object
        x-kubernetes-preserve-unknown-fields: true
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: toolchain.dev.openshift.com/v1alpha1
kind: ToolchainConfig
metadata:
  name: config
  namespace: toolchain-host-operator
spec:
  host:
    tiers:
      defaultTier: 'appstudio'
      defaultSpaceTier: 'appstudio'
    automaticApproval:
      enabled: true
    deactivation:
      deactivationDomainsExcluded: '@redhat.com'
    registrationService:
      environment: 'dev'
      verification:
        secret:
          ref: 'host-operator-secret'
          twilioAccountSID: 'twilio.account.sid'
          twilioAuthToken: 'twilio.auth.token'
          twilioFromNumber: 'twilio.from_number'
  members:
    default:
      autoscaler:
        deploy: false