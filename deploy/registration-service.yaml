---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  labels:
#    provider: codeready-toolchain
#  name: registration-service
#  namespace: user-registration-service
---
apiVersion: v1
kind: Namespace
metadata:
  name: user-registration-service
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    provider: codeready-toolchain
  name: registration-service
  namespace: user-registration-service
rules:
  - apiGroups:
      - toolchain.dev.openshift.com
    resources:
      - usersignups
    verbs:
      - create
      - get
      - update
      - list
  - apiGroups:
      - toolchain.dev.openshift.com
    resources:
      - masteruserrecords
      - toolchainconfigs
      - toolchainstatuses
    verbs:
      - get
  - apiGroups:
      - toolchain.dev.openshift.com
    resources:
      - bannedusers
      - toolchainclusters
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    provider: codeready-toolchain
  name: registration-service
  namespace: user-registration-service
subjects:
  - kind: ServiceAccount
#    name: registration-service
    name: default
roleRef:
  kind: Role
  name: registration-service
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    provider: codeready-toolchain
  name: registration-service
  namespace: user-registration-service
spec:
  replicas: 1
  selector:
    matchLabels:
      name: registration-service
  template:
    metadata:
      labels:
        name: registration-service
        run: registration-service
    spec:
#      serviceAccountName: registration-service
      serviceAccountName: default
      containers:
        - name: registration-service
          image: quay.io/matousjobanek/registration-service:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          command:
            - registration-service
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /api/v1/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          env:
            - name: WATCH_NAMESPACE
              value: user-registration-service
          resources:
            requests:
              cpu: "50m"
              memory: "100M"
---
kind: Service
apiVersion: v1
metadata:
  name: rs
  namespace: user-registration-service
  labels:
    provider: codeready-toolchain
    run: registration-service
spec:
  ports:
    - name: "8080"
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    run: registration-service
  type: ClusterIP
  sessionAffinity: null
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  labels:
    provider: codeready-toolchain
    run: registration-service
  name: rs
  namespace: user-registration-service
spec:
  host: ''
  port:
    targetPort: "8080"
  to:
    kind: Service
    name: rs
    weight: 100
  tls:
    termination: edge
  wildcardPolicy: None
#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  labels:
#    provider: codeready-toolchain
#    run: registration-service
#  name: rs
#  namespace: user-registration-service
#spec:
#  ingressClassName: nginx
#  rules:
#  - host: reg-service
#    http:
#      paths:
#      - path: /
#        pathType: Prefix
#        backend:
#          service:
#            name: rs
#            port:
#              number: 80
#---
#apiVersion: toolchain.dev.openshift.com/v1alpha1
#kind: ToolchainConfig
#metadata:
#  name: config
#  namespace: user-registration-service
#spec:
#  host:
#    tiers:
#      defaultTier: 'appstudio'
#      defaultSpaceTier: 'appstudio'
#    automaticApproval:
#      enabled: true
#    deactivation:
#      deactivationDomainsExcluded: '@redhat.com'
#    registrationService:
#      auth:
#        authClientConfigRaw: '{
#                  "realm": "redhat-external",
#                  "auth-server-url": "https://sso.redhat.com/auth",
#                  "ssl-required": "ALL",
#                  "resource": "appstudio-stage-public",
#                  "clientId": "appstudio-stage-public",
#                  "public-client": true
#                }'
#        authClientLibraryURL: https://sso.redhat.com/auth/js/keycloak.js
#        authClientPublicKeysURL: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/certs
#      environment: prod
#      registrationServiceURL: https://rs-kcp607eac86e036b29718f88baa66f49d1e0a0deed4bdcfeaed47a8dca0.apps.appstudio-stage.x99m.p1.openshiftapps.com/
#  members:
#    default:
#      autoscaler:
#        deploy: false
---
apiVersion: toolchain.dev.openshift.com/v1alpha1
kind: ToolchainConfig
metadata:
  name: config
  namespace: user-registration-service
spec:
  host:
    tiers:
      defaultTier: 'appstudio'
      defaultSpaceTier: 'appstudio'
    automaticApproval:
      enabled: true
    deactivation:
      deactivationDomainsExcluded: '@redhat.com'
    registrationService:
      environment: 'dev'
      verification:
        secret:
          ref: 'host-operator-secret'
          twilioAccountSID: 'twilio.account.sid'
          twilioAuthToken: 'twilio.auth.token'
          twilioFromNumber: 'twilio.from_number'
  members:
    default:
      autoscaler:
        deploy: false
